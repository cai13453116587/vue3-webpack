import { HistoryLocationNormalized, HistoryQuery, HistoryLocation, RawHistoryQuery } from './base';
/**
 * Transforms a URL into an object
 * @param location location to normalize
 * @param currentLocation current location, to reuse params and location
 */
export declare function parseURL(location: string): HistoryLocationNormalized;
/**
 * Transform a queryString into a query object. Accept both, a version with the leading `?` and without
 * Should work as URLSearchParams
 * @param search
 */
export declare function parseQuery(search: string): HistoryQuery;
/**
 * Stringify a URL object
 * @param location
 */
export declare function stringifyURL(location: HistoryLocation): string;
/**
 * Stringify an object query. Works like URLSearchParams. Doesn't prepend a `?`
 * @param query
 */
export declare function stringifyQuery(query: RawHistoryQuery): string;
export declare function normalizeQuery(query: RawHistoryQuery): HistoryQuery;
/**
 * Prepare a URI string to be passed to pushState
 * @param uri
 */
export declare function prepareURI(uri: string): string;
declare const originalDecodeURI: typeof decodeURI;
export { originalDecodeURI as decodeURI };
/**
 * Normalize a History location into an object that looks like
 * the one at window.location
 * @param location
 */
export declare function normalizeLocation(location: string | HistoryLocation): HistoryLocationNormalized;
