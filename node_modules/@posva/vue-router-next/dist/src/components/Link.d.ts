import { Ref } from 'vue';
import { RouteLocation } from '../types';
interface UseLinkProps {
    to: Ref<RouteLocation> | RouteLocation;
    replace?: Ref<boolean> | boolean;
}
export declare function useLink(props: UseLinkProps): {
    route: import("vue").ComputedRef<import("../types").RouteLocationNormalized>;
    href: import("vue").ComputedRef<string>;
    isActive: import("vue").ComputedRef<boolean>;
    navigate: (e?: MouseEvent) => void;
};
export declare const Link: new () => import("vue").ComponentPublicInstance<{
    to: RouteLocation;
} & {}, () => import("vue").VNode<any, any>, unknown, {}, {}, import("vue").VNodeProps & {
    to: RouteLocation;
} & {}>;
export {};
